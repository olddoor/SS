<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<description>Spring MVC Configuration</description>
	<!-- 默认的注解映射的支持 .其中属性如下conversion-service 数据绑定时类型转换，
	          如果不设置则默认注册FormattingConversionService -->
	<!-- 默认的注解映射的支持:org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<!-- 默认的注解映射的支持:org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<!--<mvc:annotation-driven />-->
	
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true"/>
                <property name="objectMapper">   <!-- 配置使用的jsonmapper工具,默认使用jackson -->
                    <bean class="com.zyl.util.JsonMapper"></bean>  
                </property> 
            </bean>
            <!-- 使用XML格式输出数据
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		        <constructor-arg>
		        	<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
				        <property name="streamDriver">
				            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
				        </property>
				        <property name="annotatedClasses">
				            <list>
				                <value>com.thinkgem.jeesite.common.persistence.BaseEntity</value>
				            </list>
				        </property>
				    </bean>
		        </constructor-arg>
		        <property name="supportedMediaTypes" value="application/xml"></property>
			</bean>
			 -->
		</mvc:message-converters>
		<!-- 
		<mvc:argument-resolvers>
			<bean class="com.thinkgem.jeesite.common.web.SecureModelAttributeMethodArgumentResolver">
				<constructor-arg value="false"/>
			</bean>
		</mvc:argument-resolvers>
		 -->
	</mvc:annotation-driven>	



	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>
	
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.zyl.web.controller" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<!--include-filter只扫描@Controller注解  -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>	


	<!-- 视图文件解析配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />


</beans>